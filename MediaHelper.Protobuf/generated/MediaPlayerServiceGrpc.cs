// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MediaPlayerService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace LocalNetflix.Protobuf.MediaPlayerServices {
  public static partial class MediaPlayerService
  {
    static readonly string __ServiceName = "MediaPlayerServices.MediaPlayerService";

    static readonly grpc::Marshaller<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> __Marshaller_EmptyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LocalNetflix.Protobuf.MiscModels.EmptyMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo> __Marshaller_PlayingMediaInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile> __Marshaller_OpenFile = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning> __Marshaller_IsRunning = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LocalNetflix.Protobuf.MediaPlayerModels.Init> __Marshaller_Init = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LocalNetflix.Protobuf.MediaPlayerModels.Init.Parser.ParseFrom);

    static readonly grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo> __Method_Info = new grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Info",
        __Marshaller_EmptyMessage,
        __Marshaller_PlayingMediaInfo);

    static readonly grpc::Method<global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> __Method_Open = new grpc::Method<global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Open",
        __Marshaller_OpenFile,
        __Marshaller_EmptyMessage);

    static readonly grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> __Method_Start = new grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Start",
        __Marshaller_EmptyMessage,
        __Marshaller_EmptyMessage);

    static readonly grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> __Method_Stop = new grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_EmptyMessage,
        __Marshaller_EmptyMessage);

    static readonly grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning> __Method_IsRunning = new grpc::Method<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage, global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsRunning",
        __Marshaller_EmptyMessage,
        __Marshaller_IsRunning);

    static readonly grpc::Method<global::LocalNetflix.Protobuf.MediaPlayerModels.Init, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> __Method_Init = new grpc::Method<global::LocalNetflix.Protobuf.MediaPlayerModels.Init, global::LocalNetflix.Protobuf.MiscModels.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Init",
        __Marshaller_Init,
        __Marshaller_EmptyMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LocalNetflix.Protobuf.MediaPlayerServices.MediaPlayerServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MediaPlayerService</summary>
    public abstract partial class MediaPlayerServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo> Info(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> Open(global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> Start(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> Stop(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning> IsRunning(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> Init(global::LocalNetflix.Protobuf.MediaPlayerModels.Init request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MediaPlayerService</summary>
    public partial class MediaPlayerServiceClient : grpc::ClientBase<MediaPlayerServiceClient>
    {
      /// <summary>Creates a new client for MediaPlayerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MediaPlayerServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MediaPlayerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MediaPlayerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MediaPlayerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MediaPlayerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo Info(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Info(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo Info(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Info, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo> InfoAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MediaPlayerModels.PlayingMediaInfo> InfoAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Info, null, options, request);
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Open(global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Open(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Open(global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Open, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> OpenAsync(global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> OpenAsync(global::LocalNetflix.Protobuf.MediaPlayerModels.OpenFile request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Open, null, options, request);
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Start(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Start(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Start(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Start, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> StartAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> StartAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Start, null, options, request);
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Stop(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Stop(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> StopAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> StopAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      public virtual global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning IsRunning(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsRunning(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning IsRunning(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsRunning, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning> IsRunningAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsRunningAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MediaPlayerModels.IsRunning> IsRunningAsync(global::LocalNetflix.Protobuf.MiscModels.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsRunning, null, options, request);
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Init(global::LocalNetflix.Protobuf.MediaPlayerModels.Init request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Init(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LocalNetflix.Protobuf.MiscModels.EmptyMessage Init(global::LocalNetflix.Protobuf.MediaPlayerModels.Init request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Init, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> InitAsync(global::LocalNetflix.Protobuf.MediaPlayerModels.Init request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LocalNetflix.Protobuf.MiscModels.EmptyMessage> InitAsync(global::LocalNetflix.Protobuf.MediaPlayerModels.Init request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Init, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MediaPlayerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MediaPlayerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MediaPlayerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Info, serviceImpl.Info)
          .AddMethod(__Method_Open, serviceImpl.Open)
          .AddMethod(__Method_Start, serviceImpl.Start)
          .AddMethod(__Method_Stop, serviceImpl.Stop)
          .AddMethod(__Method_IsRunning, serviceImpl.IsRunning)
          .AddMethod(__Method_Init, serviceImpl.Init).Build();
    }

  }
}
#endregion
